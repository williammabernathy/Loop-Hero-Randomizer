{"version":3,"sources":["assets sync /^/.*/.webp$","assets/Ancestral Crypt.webp","assets/Arsenal.webp","assets/Battlefield.webp","assets/Beacon.webp","assets/Blood Grove.webp","assets/Bookery.webp","assets/Cemetery.webp","assets/Chrono Crystals.webp","assets/Desert.webp","assets/Forest.webp","assets/Grove.webp","assets/Maze Of Memories.webp","assets/Meadow.webp","assets/Mountain.webp","assets/Necromancer.webp","assets/Oblivion.webp","assets/Outpost.webp","assets/River.webp","assets/Road Lantern.webp","assets/Rock.webp","assets/Rogue.webp","assets/Ruins.webp","assets/Sand Dunes.webp","assets/Smith Forge.webp","assets/Spider Cocoon.webp","assets/Storm Temple.webp","assets/Suburbs.webp","assets/Swamp.webp","assets/Temporal Beacon.webp","assets/Thicket.webp","assets/Treasury.webp","assets/Vampire Mansion.webp","assets/Village.webp","assets/Warrior.webp","assets/Wheat Fields.webp","assets/Zero Milestone.webp","constants/constants.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","tileType","placeholderDeck","roadCards","name","roadsideCards","landscapeCards","specialCards","goldCards","classChoice","randomizeCards","roadTotal","roadsideTotal","landscapeTotal","specialTotal","cardTotalSum","Math","floor","random","ceil","i","allCards","slice","allCardTotals","resultingCards","length","j","randomCard","indexOf","push","splice","randomizeChapter","App","useState","randomizedDeck","setRandomizedDeck","randomizedChapter","setRandomizedChapter","pageFont","setPageFont","className","style","fontFamily","value","onChange","event","target","onClick","card","index","src","require","default","alt","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85a0998c.chunk.js","sourcesContent":["var map = {\n\t\"./Ancestral Crypt.webp\": 13,\n\t\"./Arsenal.webp\": 14,\n\t\"./Battlefield.webp\": 15,\n\t\"./Beacon.webp\": 16,\n\t\"./Blood Grove.webp\": 17,\n\t\"./Bookery.webp\": 18,\n\t\"./Cemetery.webp\": 19,\n\t\"./Chrono Crystals.webp\": 20,\n\t\"./Desert.webp\": 21,\n\t\"./Forest.webp\": 22,\n\t\"./Grove.webp\": 23,\n\t\"./Maze Of Memories.webp\": 24,\n\t\"./Meadow.webp\": 25,\n\t\"./Mountain.webp\": 26,\n\t\"./Necromancer.webp\": 27,\n\t\"./Oblivion.webp\": 28,\n\t\"./Outpost.webp\": 29,\n\t\"./River.webp\": 30,\n\t\"./Road Lantern.webp\": 31,\n\t\"./Rock.webp\": 32,\n\t\"./Rogue.webp\": 33,\n\t\"./Ruins.webp\": 34,\n\t\"./Sand Dunes.webp\": 35,\n\t\"./Smith Forge.webp\": 36,\n\t\"./Spider Cocoon.webp\": 37,\n\t\"./Storm Temple.webp\": 38,\n\t\"./Suburbs.webp\": 39,\n\t\"./Swamp.webp\": 40,\n\t\"./Temporal Beacon.webp\": 41,\n\t\"./Thicket.webp\": 42,\n\t\"./Treasury.webp\": 43,\n\t\"./Vampire Mansion.webp\": 44,\n\t\"./Village.webp\": 45,\n\t\"./Warrior.webp\": 46,\n\t\"./Wheat Fields.webp\": 47,\n\t\"./Zero Milestone.webp\": 48\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2;","export default __webpack_public_path__ + \"static/media/Ancestral Crypt.34b9918a.webp\";","export default __webpack_public_path__ + \"static/media/Arsenal.394c8d41.webp\";","export default __webpack_public_path__ + \"static/media/Battlefield.a7bcbd8d.webp\";","export default __webpack_public_path__ + \"static/media/Beacon.1c45b68e.webp\";","export default __webpack_public_path__ + \"static/media/Blood Grove.e03a54db.webp\";","export default __webpack_public_path__ + \"static/media/Bookery.ffab190f.webp\";","export default __webpack_public_path__ + \"static/media/Cemetery.1101ff15.webp\";","export default __webpack_public_path__ + \"static/media/Chrono Crystals.642f2718.webp\";","export default __webpack_public_path__ + \"static/media/Desert.426ce84d.webp\";","export default __webpack_public_path__ + \"static/media/Forest.feb00015.webp\";","export default __webpack_public_path__ + \"static/media/Grove.6ec7fea7.webp\";","export default __webpack_public_path__ + \"static/media/Maze Of Memories.1ae5f35c.webp\";","export default __webpack_public_path__ + \"static/media/Meadow.d835cb14.webp\";","export default __webpack_public_path__ + \"static/media/Mountain.a1967ec7.webp\";","export default __webpack_public_path__ + \"static/media/Necromancer.1a41e623.webp\";","export default __webpack_public_path__ + \"static/media/Oblivion.93cc035c.webp\";","export default __webpack_public_path__ + \"static/media/Outpost.58cee122.webp\";","export default __webpack_public_path__ + \"static/media/River.dfc1c3b3.webp\";","export default __webpack_public_path__ + \"static/media/Road Lantern.8f718a86.webp\";","export default __webpack_public_path__ + \"static/media/Rock.fc86a3dc.webp\";","export default __webpack_public_path__ + \"static/media/Rogue.48314b3c.webp\";","export default __webpack_public_path__ + \"static/media/Ruins.194a8617.webp\";","export default __webpack_public_path__ + \"static/media/Sand Dunes.cf6d7ae3.webp\";","export default __webpack_public_path__ + \"static/media/Smith Forge.7143d17f.webp\";","export default __webpack_public_path__ + \"static/media/Spider Cocoon.5d1d1dd9.webp\";","export default __webpack_public_path__ + \"static/media/Storm Temple.84627e2a.webp\";","export default __webpack_public_path__ + \"static/media/Suburbs.b00b37bc.webp\";","export default __webpack_public_path__ + \"static/media/Swamp.53da5114.webp\";","export default __webpack_public_path__ + \"static/media/Temporal Beacon.281cecef.webp\";","export default __webpack_public_path__ + \"static/media/Thicket.edaab4cc.webp\";","export default __webpack_public_path__ + \"static/media/Treasury.e24a1f0e.webp\";","export default __webpack_public_path__ + \"static/media/Vampire Mansion.67a5fe24.webp\";","export default __webpack_public_path__ + \"static/media/Village.ae21586d.webp\";","export default __webpack_public_path__ + \"static/media/Warrior.fe5bfe0f.webp\";","export default __webpack_public_path__ + \"static/media/Wheat Fields.127510c0.webp\";","export default __webpack_public_path__ + \"static/media/Zero Milestone.790a1617.webp\";","export const tileType = [\"Road\", \"Roadside\", \"Landscape\", \"Special\", \"Golden\", \"Class\"];\r\n\r\nexport const minTotalCards = 7;\r\nexport const maxTotalCards = 15;\r\n\r\nexport const placeholderDeck = [[], [], [], [], [], [], ['00'], ['00'], ['00'], ['00'], ['00']];\r\n\r\nexport const roadCards = [\"Cemetery\", \"Village\", \"Grove\", \"Wheat Fields\", \"Swamp\", \"Ruins\"];\r\nroadCards.name = \"Road\";\r\nexport const roadsideCards = [\"Spider Cocoon\", \"Vampire Mansion\", \"Battlefield\", \"Blood Grove\", \"Bookery\", \"Road Lantern\", \"Smith Forge\", \"Chrono Crystals\", \"Outpost\"];\r\nroadsideCards.name = \"Roadside\";\r\nexport const landscapeCards = [\"Mountain\", \"Thicket\", \"River\", \"Sand Dunes\", \"Meadow\", \"Suburbs\"];\r\nlandscapeCards.name = \"Landscape\";\r\nexport const specialCards = [\"Oblivion\", \"Beacon\", \"Storm Temple\", \"Temporal Beacon\", \"Treasury\"];\r\nspecialCards.name = \"Special\";\r\nexport const goldCards = [\"Ancestral Crypt\", \"Zero Milestone\", \"Maze Of Memories\", \"Arsenal\"];\r\ngoldCards.name = \"Gold\";\r\nexport const classChoice = [\"Warrior\", \"Rogue\", \"Necromancer\"];\r\nclassChoice.name = \"Class\"","/* eslint-disable no-lone-blocks */\nimport { useState } from \"react\";\nimport './App.css';\nimport { tileType, minTotalCards, maxTotalCards, placeholderDeck, roadCards, roadsideCards, landscapeCards, specialCards, goldCards, classChoice } from './constants/constants';\n//import DeckSleeve from './Components/DeckSleeve/DeckSleeve';\n\n// randomize the deck\nconst randomizeCards = () => {\n  //e.preventDefault();\n\n  // loop to ensure constraints of 15 max and 7 min cards are met\n  let roadTotal, roadsideTotal, landscapeTotal, specialTotal, goldTotal, classTotal, cardTotalSum;\n  do {\n    // get the amount of cards for each \"sleeve\"\n    // this is per the actual documentation.....\n    roadTotal = Math.floor(Math.random() * (Math.floor(6) - Math.ceil(2) + 1) + Math.ceil(2));\n    roadsideTotal = Math.floor(Math.random() * (Math.floor(9) - Math.ceil(2) + 1) + Math.ceil(2));\n    landscapeTotal = Math.floor(Math.random() * (Math.floor(5) - Math.ceil(2) + 1) + Math.ceil(2));\n    specialTotal = Math.floor(Math.random() * (Math.floor(4) - Math.ceil(1) + 1) + Math.ceil(1));\n\n    cardTotalSum = roadTotal + roadsideTotal + landscapeTotal + specialTotal;\n  } while (cardTotalSum > maxTotalCards || cardTotalSum < minTotalCards)\n\n  goldTotal = 1;\n  classTotal = 1;\n\n  // temp arrays to restore values after generating deck\n  let roadCardsTemp = roadCards.slice();\n  let roadsideCardsTemp = roadsideCards.slice();\n  let landscapeCardsTemp = landscapeCards.slice();\n  let specialCardsTemp = specialCards.slice();\n  let goldCardsTemp = goldCards.slice();\n  let classChoiceTemp = classChoice.slice();\n\n  // set up array of arrays containing generated totals and all card values\n  let allCards = [roadCardsTemp, roadsideCardsTemp, landscapeCardsTemp, specialCardsTemp, goldCardsTemp, classChoiceTemp];\n  let allCardTotals = [roadTotal, roadsideTotal, landscapeTotal, specialTotal, goldTotal, classTotal];\n\n  // prepare array of arrays to populate and return\n  let roadResults = [];\n  let roadsideResults = [];\n  let landscapeResults = [];\n  let specialResults = [];\n  let goldResults = [];\n  let classResults = [];\n\n  // empty 2d array to return for state change\n  let resultingCards = [roadResults, roadsideResults, landscapeResults, specialResults, goldResults, classResults,\n    cardTotalSum];\n\n  // populate randomized deck given generated data\n  var i;\n  for (i = 0; i < allCards.length; i++) {\n    var j;\n    var randomCard;\n    for (j = 0; j < allCardTotals[i]; j++) {\n      // generate random number from 0 to size of array\n      randomCard = Math.floor(Math.random() * (Math.floor(allCards[i].length) - Math.ceil(0)) + Math.ceil(0));\n\n      // check if wheat field was selected and then add village if it hasn't been added yet\n      if (allCards[i][randomCard] === \"Wheat Fields\") {\n        if (allCards[0].indexOf(\"Village\") > -1 && cardTotalSum < 14) {\n          resultingCards[0].push(\"Village\");\n          resultingCards[0].push(allCards[i][randomCard]);\n          allCards[0].splice(randomCard, 1);\n          allCards[0].splice(allCards[i].indexOf(\"Village\"), 1);\n        }\n        else if (cardTotalSum > 13) {\n          // skip wheat field, too many cards for wheat fields AND village\n          continue;\n        }\n        else {\n          resultingCards[0].push(allCards[i][randomCard]);\n          allCards[0].splice(randomCard, 1);\n        }\n      }\n      // check if blood grove was selected and if conditions to select it are met\n      else if (allCards[i][randomCard] === \"Blood Grove\") {\n        // check if blood grove will be paired with grove\n        if (resultingCards[0].indexOf(\"Grove\") > -1) {\n          resultingCards[1].push(allCards[1][randomCard]);\n          allCards[1].splice(randomCard, 1);\n        }\n        else {\n          // skip blood grove\n          continue;\n        }\n      }\n      else {\n        // add randomly selected card to array of arrays containing all selected cards\n        resultingCards[i].push(allCards[i][randomCard]);\n\n        // remove randomly selected card(s) to avoid duplicates\n        allCards[i].splice(randomCard, 1);\n      }\n\n      // catches to ensure roads and roadsides don't break upper and lower limits\n      if (i === 0 && resultingCards[0].length < 2) {\n        j--;\n      }\n      else if (i === 0 && resultingCards[0].length === 6) {\n        break;\n      }\n\n      if (i === 1 && resultingCards[1].length < 2) {\n        j--;\n      }\n      else if (i === 1 && resultingCards[1].length === 9) {\n        break;\n      }\n\n    }\n\n  }\n\n  resultingCards[6] = resultingCards[0].length + resultingCards[1].length + resultingCards[2].length + resultingCards[3].length;\n\n  // set the randomized deck as state\n  //console.log(resultingCards);\n  return resultingCards;\n}\n\n// randomize the chapter from 1-4\nconst randomizeChapter = () => {\n  let randomChapter = Math.floor(Math.random() * (Math.floor(4) - Math.ceil(1) + 1) + Math.ceil(1));\n\n  return randomChapter;\n}\n\n{/* \n  Main Component\n*/}\nconst App = () => {\n\n  // states used through app\n  // our randomized deck, the randomized chapter and the page font\n  const [randomizedDeck, setRandomizedDeck] = useState(placeholderDeck);\n  const [randomizedChapter, setRandomizedChapter] = useState(0);\n  const [pageFont, setPageFont] = useState('ARCADECLASSIC');\n\n  // update the page font using event handler\n  const changeFont = (event) => {\n    setPageFont(event.target.value);\n  }\n\n  return (\n    <div className=\"App\" style={{ fontFamily: pageFont }}>\n      <h1 className=\"title\">Loop Hero Randomizer</h1>\n\n      <div>\n        <select className=\"fontSelect\" value={pageFont} onChange={changeFont} style={{ fontFamily: pageFont }}>\n          <option value=\"ARCADECLASSIC\">Retro</option>\n          <option value=\"roboto\">Simple</option>\n          <option value=\"dyslex\">Dyslexic</option>\n        </select>\n      </div>\n\n      <table className=\"table\">\n        <tbody>\n\n          <tr>\n            <th>\n              <h2 className=\"cardsColumnsTitle\">Cards</h2>\n            </th>\n          </tr>\n\n          <tr>\n            <td className=\"cardsColumns\">\n              <button className=\"randomizeButton\" style={{ fontFamily: pageFont }} onClick={() => setRandomizedDeck(randomizeCards)}>Randomize</button>\n              <h2>Total Cards: [{randomizedDeck[6]}]</h2>\n              <h2>{tileType[0]} [{randomizedDeck[0].length}]</h2>\n              {\n                randomizedDeck[0].map((card, index) => (<img className=\"cardImage\" key={index} src={require(`./assets/${card}.webp`).default} alt={card} />))\n              }\n\n              <h2>{tileType[1]} [{randomizedDeck[1].length}]</h2>\n              {randomizedDeck[1].map((card, index) => (<img className=\"cardImage\" key={index} src={require(`./assets/${card}.webp`).default} alt={card} />))}\n\n              <h2>{tileType[2]} [{randomizedDeck[2].length}]</h2>\n              {randomizedDeck[2].map((card, index) => (<img className=\"cardImage\" key={index} src={require(`./assets/${card}.webp`).default} alt={card} />))}\n\n              <h2>{tileType[3]} [{randomizedDeck[3].length}]</h2>\n              {randomizedDeck[3].map((card, index) => (<img className=\"cardImage\" key={index} src={require(`./assets/${card}.webp`).default} alt={card} />))}\n\n              <h2>{tileType[4]}</h2>\n              {randomizedDeck[4].map((card, index) => (<img className=\"cardImage\" key={index} src={require(`./assets/${card}.webp`).default} alt={card} />))}\n\n              <h2>{tileType[5]}</h2>\n              {randomizedDeck[5].map((card, index) => (<img className=\"cardImage\" key={index} src={require(`./assets/${card}.webp`).default} alt={card} />))}\n            </td>\n          </tr>\n          <tr>\n            <th>\n              <h2 className=\"otherColumnTitle\">Other</h2>\n            </th>\n          </tr>\n          <tr>\n            <td className=\"otherColumn\">\n              <button className=\"randomizeButton\" style={{ fontFamily: pageFont }} onClick={() => setRandomizedChapter(randomizeChapter)}>Randomize</button>\n              <h2>Chapter : [{randomizedChapter}]</h2>\n            </td>\n          </tr>\n\n        </tbody>\n      </table>\n\n      <footer className=\"simpleFooter\">Code at: <a href=\"https://example.com/faq.html\"> https://github.com/williammabernathy/Loop-Hero-Randomizer </a></footer>\n\n      {/*\n      The start of making it \"pretty\"\n      <ul>\n        {tileType.map((item, index) => \n          <li>\n            <DeckSleeve key={index} \n              tileType={item}\n            />\n          </li>\n          )\n        }\n      </ul>\n      */}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// reload on changes\nif (module.hot) {\n  module.hot.accept()\n}\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}